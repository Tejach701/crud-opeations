// <auto-generated />
using Employees.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Employees.Migrations
{
    [DbContext(typeof(EmployeesContext))]
    [Migration("20241219094552_intialmigration")]
    partial class intialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Employees.model.domain.Departments", b =>
                {
                    b.Property<int>("departmentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("departmentid"));

                    b.Property<string>("departmentname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("locationid")
                        .HasColumnType("int");

                    b.HasKey("departmentid");

                    b.HasIndex("locationid");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Employees.model.domain.countries", b =>
                {
                    b.Property<int>("countryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("countryid"));

                    b.Property<string>("countryname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("regionid")
                        .HasColumnType("int");

                    b.HasKey("countryid");

                    b.HasIndex("regionid");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("Employees.model.domain.dependents", b =>
                {
                    b.Property<int>("dependentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dependentid"));

                    b.Property<int>("empid")
                        .HasColumnType("int");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("relationship")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("dependentid");

                    b.HasIndex("empid");

                    b.ToTable("dependents");
                });

            modelBuilder.Entity("Employees.model.domain.employees", b =>
                {
                    b.Property<int>("empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("empid"));

                    b.Property<int>("departmentid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hiredate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("jobid")
                        .HasColumnType("int");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("managerid")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("empid");

                    b.HasIndex("departmentid");

                    b.HasIndex("jobid");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Employees.model.domain.jobs", b =>
                {
                    b.Property<int>("jobid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("jobid"));

                    b.Property<string>("jobtitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maxsalary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("minsalary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("jobid");

                    b.ToTable("jobs");
                });

            modelBuilder.Entity("Employees.model.domain.location", b =>
                {
                    b.Property<int>("locationid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("locationid"));

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("countryid")
                        .HasColumnType("int");

                    b.Property<string>("pcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stateprovience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("locationid");

                    b.HasIndex("countryid");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("Employees.model.domain.regions", b =>
                {
                    b.Property<int>("regionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("regionid"));

                    b.Property<string>("regionname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("regionid");

                    b.ToTable("regions");
                });

            modelBuilder.Entity("Employees.model.domain.Departments", b =>
                {
                    b.HasOne("Employees.model.domain.location", "location")
                        .WithMany()
                        .HasForeignKey("locationid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("location");
                });

            modelBuilder.Entity("Employees.model.domain.countries", b =>
                {
                    b.HasOne("Employees.model.domain.regions", "regions")
                        .WithMany()
                        .HasForeignKey("regionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("regions");
                });

            modelBuilder.Entity("Employees.model.domain.dependents", b =>
                {
                    b.HasOne("Employees.model.domain.employees", "employees")
                        .WithMany()
                        .HasForeignKey("empid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employees");
                });

            modelBuilder.Entity("Employees.model.domain.employees", b =>
                {
                    b.HasOne("Employees.model.domain.Departments", "departments")
                        .WithMany()
                        .HasForeignKey("departmentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Employees.model.domain.jobs", "jobs")
                        .WithMany()
                        .HasForeignKey("jobid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departments");

                    b.Navigation("jobs");
                });

            modelBuilder.Entity("Employees.model.domain.location", b =>
                {
                    b.HasOne("Employees.model.domain.countries", "countries")
                        .WithMany()
                        .HasForeignKey("countryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("countries");
                });
#pragma warning restore 612, 618
        }
    }
}
